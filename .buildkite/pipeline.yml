################
# Build pipeline
################
docker_plugin: &docker_plugin_configuration
  oasislabs/docker#v2.1.0-oasis4:
    image: "oasislabs/testing:0.3.0"
    always_pull: true
    workdir: /workdir
    volumes:
      - .:/workdir
      - /var/lib/buildkite-agent/.ssh:/root/.ssh
      - /var/lib/buildkite-agent/.coveralls:/root/.coveralls
      - /var/lib/buildkite-agent/.circleci:/root/.circleci
      - /var/lib/buildkite-agent/.buildkite:/root/.buildkite
      # Shared Rust incremental compile caches.
      - /tmp/cargo_ic/debug:/tmp/artifacts/debug/incremental
      - /tmp/cargo_ic/debug_sgx:/tmp/artifacts/x86_64-fortanix-unknown-sgx/debug/incremental
      # Shared Rust package checkouts directory.
      - /tmp/cargo_pkg/git:/root/.cargo/git
      - /tmp/cargo_pkg/registry:/root/.cargo/registry
      # Shared Rust SGX standard library artifacts cache.
      - /tmp/xargo_cache:/root/.xargo
      # Shared Go package checkouts directory.
      - /tmp/go_pkg:/root/go/pkg
    environment:
      - "LC_ALL=C.UTF-8"
      - "LANG=C.UTF-8"
      - "CARGO_TARGET_DIR=/tmp/artifacts"
      - "CARGO_INSTALL_ROOT=/root/.cargo"
      - "RUSTFLAGS=-C target-feature=+aes,+ssse3"
      - "EKIDEN_BRANCH=kryha"
      - "E2E_TESTS_BRANCH=kryha"
    propagate-environment: true
    unconfined: true

steps:

  - label: Build genesis
    command:
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/build_generic.sh /workdir -p genesis
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  # TODO: Update and build again when we start using the new storage interface.
  # - label: Build inspector
  #   command:
  #     - .buildkite/scripts/setup_gitconfig.sh
  #     - .buildkite/rust/build_generic.sh /workdir -p inspector
  #   agents:
  #     buildkite_agent_size: large
  #   plugins:
  #     <<: *docker_plugin_configuration

  - label: Build web3 gateway
    command:
      - .buildkite/scripts/setup_gitconfig.sh

      # Build code and run tests
      - .buildkite/rust/build_generic.sh /workdir -p web3-gateway

      # Upload artifact required in end-to-end tests.
      # This is done here to keep the build and test
      # script generic.
      - cd /tmp/artifacts/debug
      - buildkite-agent artifact upload gateway
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build runtime (ELF)
    command:
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/build_runtime.sh /workdir

      # Upload artifact required in end-to-end tests.
      # This is done here to keep the build and test
      # script generic.
      - cd /tmp/artifacts/debug
      - buildkite-agent artifact upload runtime-ethereum
    env:
      RUNTIME_VARIANT: elf
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: Build runtime (SGXS)
    command:
      - .buildkite/scripts/setup_gitconfig.sh
      - .buildkite/rust/build_runtime.sh /workdir

      # Upload artifact required in end-to-end tests.
      # This is done here to keep the build and test
      # script generic.
      - cd /tmp/artifacts/x86_64-fortanix-unknown-sgx/debug
      - buildkite-agent artifact upload runtime-ethereum.sgxs
    env:
      RUNTIME_VARIANT: sgxs
    agents:
      buildkite_agent_size: large
    plugins:
      <<: *docker_plugin_configuration

  - label: ":rocket: Deploy"
    trigger: runtime-ethereum-deploy-to-staging
    async: true
    branches: "master beta kryha"
    build:
      message: "${BUILDKITE_MESSAGE}"
      commit: "${BUILDKITE_COMMIT}"
      branch: "${BUILDKITE_BRANCH}"
