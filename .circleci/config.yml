version: 2
jobs:
  build:
    docker:
      - image: ekiden/testing:0.1.0-alpha.4
    steps:
      # Set up
      - run: echo 'PS1='"'"'\$ '"'"'; . /root/.bashrc' >> $BASH_ENV
      - run: echo 'export SGX_MODE=SIM' >> $BASH_ENV
      - run: echo 'export INTEL_SGX_SDK=/opt/sgxsdk' >> $BASH_ENV
      - checkout

      # Install Ekiden binaries.
      - run: cargo install --git https://github.com/oasislabs/ekiden --tag 0.1.0-alpha.3 ekiden-tools
      - run: cargo install --git https://github.com/oasislabs/ekiden --tag 0.1.0-alpha.3 ekiden-compute
      - run: cargo install --git https://github.com/oasislabs/ekiden --tag 0.1.0-alpha.3 ekiden-consensus
      # Build key manager contract.
      - run: |
          cargo ekiden build-contract \
              --git https://github.com/oasislabs/ekiden \
              --tag 0.1.0-alpha.3 \
              --output target/contract \
              ekiden-key-manager
      # Build hello world contract.
      - run: cargo ekiden build-contract --output-identity
      # Run hello world contract tests.
      - run: cargo test
      # Build hello world client.
      - run:
          command: cargo build
          working_directory: examples/client
      # Check style. This needs to be after everything is built.
      - run: cargo fmt -- --write-mode=diff

      # Contract end-to-end tests.

      # Start the consensus node.
      - run:
          command: ekiden-consensus
          background: true
      # Start tendermint node.
      - run: tendermint init
      - run:
          command: tendermint node --consensus.create_empty_blocks=false --rpc.laddr tcp://0.0.0.0:46666 --rpc.grpc_laddr tcp://0.0.0.0:46657
          background: true
      # Start key manager compute node.
      - run:
          command: ekiden-compute target/contract/ekiden-key-manager.so -p 9003 --disable-key-manager --identity-file identity-km.pb
          background: true
      # Start hello world compute node.
      - run:
          command: ekiden-compute target/contract/helloworld.so --identity-file identity-helloworld.pb
          background: true
      # Start hello world client.
      - run:
          command: ./target/debug/helloworld-client --mr-enclave $(cat ../../target/contract/helloworld.mrenclave)
          working_directory: examples/client

  deploy:
    docker:
      - image: ekiden/testing:0.1.0-alpha.4
    steps:
      # Set up
      - run: echo 'PS1='"'"'\$ '"'"'; . /root/.bashrc' >> $BASH_ENV
      - run: echo 'export SGX_MODE=SIM' >> $BASH_ENV
      - run: echo 'export INTEL_SGX_SDK=/opt/sgxsdk' >> $BASH_ENV
      - checkout
      - setup_remote_docker

      # Build deployment image.
      - run: |
          echo "$DOCKERHUB_PASSWORD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
          BUILD_IMAGES_NO_ENTER=1 ./docker/deployment/build-images.sh
      # Push deployment image.
      - run: docker push oasislabs/ekiden-contract-evm:latest
      # Update testnet.
      # https://stackoverflow.com/a/33511811/1864688
      - run: |
          REPO_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' oasislabs/ekiden-contract-evm:latest)
          mkdir -p ~/.kube
          echo "$KUBECONFIG_CONTENT_BASE64" | base64 -di >~/.kube/config
          kubectl set image deployments/evm-consensus ekiden-consensus=$REPO_DIGEST
          kubectl set image deployments/evm-key-manager ekiden-compute=$REPO_DIGEST
          kubectl set image deployments/evm ekiden-compute=$REPO_DIGEST


workflows:
  version: 2
  build:
    jobs:
      - build
      - deploy:
          filters:
            branches:
              # %%% change this to master before merging
              only: testnet
          requires:
            - build
experimental:
  notify:
    branches:
      only:
        - master
